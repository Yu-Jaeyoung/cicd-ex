name: hello-github-actions

on:
  push:
    branches:
      - main

jobs:
  init:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
      - run: bun --version

  # package.json 을 필수로 넣어야 함

  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Bun 셋업
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Node.js 셋업
        uses: actions/setup-node@v3
        with:
          node-version: '20.17.0'

      - name: SSH 셋업
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: bastion 서버 연결 테스트
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER_WISOFT}}@${{ secrets.SSH_HOST_WISOFT }} -p 10020 "echo 중간 서버에 연결 성공"

      - name: 내부망 서버에 SSH 터널링으로 연결
        run: |
          ssh -J ${{ secrets.SSH_USER_WISOFT }}@${{ secrets.SSH_HOST_WISOFT }}:10020 \
              -o StrictHostKeyChecking=no ${{ secrets.SSH_USER_JAEYOUNG }}@${{ secrets.SSH_HOST_JAEYOUNG }} "echo 내부망 서버에 연결 성공"
#
      - name: 내부망 서버에 파일 복사
        run: |
          scp -J ${{ secrets.SSH_USER_WISOFT }}@${{ secrets.SSH_HOST_WISOFT }}:10020 \
              -r "$GITHUB_WORKSPACE/"* ${{ secrets.SSH_USER_JAEYOUNG }}@${{ secrets.SSH_HOST_JAEYOUNG }}:~/app

      - name: 의존성 설치 및 서버 재구동
        run: |
          ssh -J ${{ secrets.SSH_USER_WISOFT }}@${{ secrets.SSH_HOST_WISOFT }}:10020 \
              ${{ secrets.SSH_USER_JAEYOUNG }}@${{ secrets.SSH_HOST_JAEYOUNG }} << 'ENDSSH'
            cd ~/app
            $HOME/.asdf/shims/bun install
            $HOME/.asdf/shims/pm2 start ecosystem.config.cjs
            echo "Deployment successful!"
          ENDSSH
